{"version":3,"sources":["components/employees/EmployeesRow.jsx","components/SearchBar/SearchBar.jsx","components/employees/Employees.jsx","components/header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["EmployeesRow","employees","map","employee","src","picture","thumbnail","alt","name","first","last","phone","email","dob","date","substring","id","value","SearchBar","props","className","type","placeholder","aria-label","onSubmit","change","Employees","state","filterEmployees","handleInputChange","e","target","setState","nameSort","sortedArray","sort","a","b","nameA","toUpperCase","nameB","searchEmp","console","log","axios","get","then","response","data","results","catch","err","scope","aria-hidden","onClick","this","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAmBeA,EAjBM,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACnB,OACI,gCACKA,EAAUC,KAAI,SAACC,GAAD,OAEX,+BACI,6BAAI,qBAAKC,IAAKD,EAASE,QAAQC,UAAWC,IAAKJ,EAASK,KAAKC,UAC7D,+BAAKN,EAASK,KAAKC,MAAnB,IAA2BN,EAASK,KAAKE,QACzC,6BAAKP,EAASQ,QACd,6BAAKR,EAASS,QACd,6BAAKT,EAASU,IAAIC,KAAKC,UAAU,EAAG,QAL/BZ,EAASa,GAAGC,aCWtBC,G,MAdG,SAACC,GACf,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACD,iCACL,uBAAOA,UAAU,uBAAuBC,KAAK,SAASC,YAAY,OAAOC,aAAW,WACpF,wBAAQH,UAAU,wBAAwBC,KAAK,SAASG,SAAUL,EAAMM,OAAxE,8BCuESC,E,4MA5EXC,MAAQ,CACJ1B,UAAW,GAEX2B,gBAAiB,I,EAkBnBC,kBAAoB,SAACC,GAAO,IAAD,EACDA,EAAEC,OAAlBvB,EADiB,EACjBA,KAAMS,EADW,EACXA,MACd,EAAKe,SAAL,eACGxB,EAAOS,K,EAIZgB,SAAW,WACP,IAAMC,EAAc,EAAKP,MAAM1B,UAAUkC,MAAK,SAAUC,EAAEC,GACxD,IAAIC,EAAQF,EAAE5B,KAAKE,KAAK6B,cACpBC,EAAQH,EAAE7B,KAAKE,KAAK6B,cACxB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAIF,KAGT,EAAKR,SAAS,CACVJ,gBAAiBM,K,EAKzBO,UAAY,WAEVC,QAAQC,IAAI,mB,uDA7ChB,WAAqB,IAAD,OAChBC,IAAMC,IAAI,gDACXC,MAAK,SAACC,GACLL,QAAQC,IAAII,EAASC,KAAKC,SACtB,EAAKjB,SAAS,CACZ/B,UAAW8C,EAASC,KAAKC,QACzBrB,gBAAiBmB,EAASC,KAAKC,aAIlCC,OAAM,SAACC,GAAD,OAAST,QAAQC,IAAIQ,Q,oBAuClC,WACI,OACQ,qBAAK/B,UAAU,YAAf,SACA,wBAAOA,UAAU,aAAjB,UACd,gCACE,+BACE,oBAAIgC,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,iBAAoB,mBAAGhC,UAAU,0BAA0BiC,cAAY,OAAOC,QAASC,KAAKtB,cAC5F,oBAAImB,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGA,cAAC,EAAD,CAAcnD,UAAWsD,KAAK5B,MAAMC,2B,GArElB4B,aCgBTC,G,MAlBA,WACX,OACE,qCAEM,qBAAKrC,UAAU,4BAAf,SACV,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,uGAKJ,4BCCesC,MAZf,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,EAAD,QCESuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9cae6689.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst EmployeesRow = ({employees}) => {\r\n    return (\r\n        <tbody>\r\n            {employees.map((employee) => (\r\n                \r\n                <tr key={employee.id.value}>\r\n                    <td><img src={employee.picture.thumbnail} alt={employee.name.first}></img></td>\r\n                    <td>{employee.name.first} {employee.name.last}</td>\r\n                    <td>{employee.phone}</td>\r\n                    <td>{employee.email}</td>\r\n                    <td>{employee.dob.date.substring(0, 10)}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default EmployeesRow;","import React from 'react';\r\nimport \"./SearchBar.css\";\r\n\r\n\r\nconst SearchBar = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-4\"></div>\r\n            <div className=\"col-sm-4\">\r\n           <form>\r\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Name\" aria-label=\"Search\"></input>\r\n      <button className=\"btn my-2 my-sm-2 mb-2\" type=\"submit\" onSubmit={props.change}>Search</button>\r\n    </form> \r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport EmployeesRow from \"./EmployeesRow\";\r\nimport SearchBar from \"../SearchBar/SearchBar\"\r\n\r\nclass Employees extends Component {\r\n    state = {\r\n        employees: [\r\n        ],\r\n        filterEmployees: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://randomuser.me/api/?results=25&nat=us\")\r\n      .then((response) => {\r\n        console.log(response.data.results);\r\n            this.setState({\r\n              employees: response.data.results,\r\n              filterEmployees: response.data.results\r\n            });\r\n            // this.nameSort();\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n\r\n    \r\n      // Changes state when an input change occurs\r\n      handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n          [name]: value,\r\n        });\r\n      }\r\n\r\n      nameSort = () => {\r\n          const sortedArray = this.state.employees.sort(function (a,b) {\r\n            var nameA = a.name.last.toUpperCase(); // ignore upper and lowercase\r\n            var nameB = b.name.last.toUpperCase(); // ignore upper and lowercase\r\n            if (nameA < nameB) {\r\n              return -1;\r\n            }\r\n            if (nameA > nameB) {\r\n              return 1;\r\n            }\r\n          \r\n            // names must be equal\r\n            return 0;\r\n          });\r\n\r\n          this.setState({\r\n              filterEmployees: sortedArray\r\n          })\r\n\r\n      }\r\n\r\n      searchEmp = () => {\r\n        //   const searchArray = this.state.employees.filter(function ()\r\n        console.log(\"Button clicked\");\r\n      }\r\n\r\n    \r\n    render() {\r\n        return (\r\n                <div className=\"container\">\r\n                <table className=\"table mt-5\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Image</th>\r\n      <th scope=\"col\">Name<i className=\"fa fa-arrow-circle-down\" aria-hidden=\"true\" onClick={this.nameSort}></i></th>\r\n      <th scope=\"col\">Phone</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">DOB</th>\r\n    </tr>\r\n  </thead>\r\n      <EmployeesRow employees={this.state.filterEmployees}/>\r\n\r\n</table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Employees;","import React from 'react';\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n      <>\r\n        \r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n  <div className=\"container\">\r\n    <h1 className=\"display-4\">Employee Directory</h1>\r\n    <p className=\"lead\">Click on Name to filter alphabetically or use the search bar to narrow your results.</p>\r\n\r\n\r\n  </div>\r\n</div>\r\n<hr></hr>\r\n</>\r\n        \r\n    );\r\n};\r\n\r\nexport default Header;","import Employees from \"./components/employees/Employees\";\nimport Header from \"./components/header/Header\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <SearchBar/>\n\n      <Employees/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}